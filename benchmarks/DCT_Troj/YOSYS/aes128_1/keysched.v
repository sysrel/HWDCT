/* Generated by Yosys 0.9+3882 (git sha1 beeaad1, clang 3.8.0-2ubuntu4 -fPIC -Os) */

(* src = "keysched.v:1.1-249.10" *)
module keysched(clk, reset, start_i, round_i, last_key_i, new_key_o, ready_o, sbox_access_o, sbox_data_o, sbox_data_i, sbox_decrypt_o);
  (* src = "keysched.v:95.1-117.4" *)
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _261_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _262_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _263_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _264_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _265_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _266_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _267_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _268_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _269_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _270_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _271_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _272_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _273_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _274_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _275_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _276_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _277_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _278_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _279_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _280_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _281_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _282_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _283_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _284_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _285_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _286_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _287_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _288_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _289_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _290_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _291_;
  (* src = "keysched.v:229.21-229.47" *)
  wire _292_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _293_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _294_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _295_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _296_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _297_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _298_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _299_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _300_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _301_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _302_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _303_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _304_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _305_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _306_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _307_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _308_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _309_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _310_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _311_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _312_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _313_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _314_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _315_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _316_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _317_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _318_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _319_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _320_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _321_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _322_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _323_;
  (* src = "keysched.v:230.21-230.46" *)
  wire _324_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _325_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _326_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _327_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _328_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _329_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _330_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _331_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _332_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _333_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _334_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _335_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _336_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _337_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _338_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _339_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _340_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _341_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _342_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _343_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _344_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _345_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _346_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _347_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _348_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _349_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _350_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _351_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _352_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _353_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _354_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _355_;
  (* src = "keysched.v:231.20-231.44" *)
  wire _356_;
  (* src = "keysched.v:148.12-148.17" *)
  wire [127:0] K_var;
  (* src = "keysched.v:3.7-3.10" *)
  input clk;
  (* src = "keysched.v:25.12-25.15" *)
  wire [31:0] col;
  (* src = "keysched.v:26.13-26.20" *)
  reg [127:0] key_reg;
  (* src = "keysched.v:7.15-7.25" *)
  input [127:0] last_key_i;
  (* src = "keysched.v:8.16-8.25" *)
  output [127:0] new_key_o;
  (* src = "keysched.v:24.12-24.20" *)
  wire [31:0] next_col;
  (* src = "keysched.v:21.11-21.21" *)
  wire [2:0] next_state;
  (* src = "keysched.v:9.8-9.15" *)
  output ready_o;
  reg ready_o;
  (* src = "keysched.v:4.7-4.12" *)
  input reset;
  (* src = "keysched.v:6.13-6.20" *)
  input [3:0] round_i;
  (* src = "keysched.v:10.8-10.21" *)
  output sbox_access_o;
  (* src = "keysched.v:12.13-12.24" *)
  input [7:0] sbox_data_i;
  (* src = "keysched.v:11.14-11.25" *)
  output [7:0] sbox_data_o;
  (* src = "keysched.v:13.8-13.22" *)
  output sbox_decrypt_o;
  (* src = "keysched.v:5.7-5.14" *)
  input start_i;
  (* src = "keysched.v:22.11-22.16" *)
  reg [2:0] state/*verilator public*/;
  (* src = "keysched.v:37.5-37.15" *)
  reg trojan_ena;
  (* onehot = 32'd1 *)
  reg [2:0] trojan_state;
  (* src = "keysched.v:150.11-150.15" *)
  wire [23:0] zero;
  assign _040_ = state[0] | ~(state[1]);
  assign _041_ = _040_ | state[2];
  assign _042_ = state[1] | ~(state[0]);
  assign _043_ = _042_ | state[2];
  assign _044_ = _043_ & _041_;
  assign _045_ = ~state[2];
  assign _046_ = ~(state[1] & state[0]);
  assign _047_ = _045_ & ~(_046_);
  assign _048_ = _044_ & ~(_047_);
  assign _049_ = state[1] | state[0];
  assign _050_ = state[2] & ~(_049_);
  assign _051_ = _048_ & ~(_050_);
  assign _052_ = _045_ & ~(_049_);
  assign _053_ = _052_ | ~(_051_);
  assign _054_ = _053_ & trojan_state[2];
  assign _002_ = _054_ | trojan_state[1];
  assign _055_ = state[2] ? _049_ : _046_;
  assign _056_ = _055_ & _044_;
  assign _057_ = ~(_056_ | _050_);
  assign _058_ = _047_ | ~(_043_);
  assign _006_ = _057_ & ~(_058_);
  assign _059_ = state[2] & ~(_042_);
  assign _060_ = state[2] & ~(_040_);
  assign _061_ = ~(_060_ | _059_);
  assign _062_ = state[2] & ~(_046_);
  assign _063_ = _061_ & ~(_062_);
  assign _064_ = trojan_state[0] & ~(_063_);
  assign _065_ = trojan_state[2] & ~(_053_);
  assign _003_ = _065_ | _064_;
  assign _066_ = _041_ & ~(_056_);
  assign _067_ = _050_ | ~(_043_);
  assign _005_ = _066_ & ~(_067_);
  assign _068_ = ~start_i;
  assign _004_ = ~(_052_ & _068_);
  assign _007_ = _066_ & _055_;
  assign _069_ = _047_ | ~(_041_);
  assign _070_ = _052_ | ~(_043_);
  assign _071_ = _070_ | _069_;
  assign next_state[2] = _071_ & _047_;
  assign _072_ = ~(_047_ & last_key_i[0]);
  assign _073_ = last_key_i[8] & ~(_041_);
  assign _074_ = _072_ & ~(_073_);
  assign _075_ = last_key_i[16] & ~(_043_);
  assign _076_ = ~(last_key_i[24] & start_i);
  assign _077_ = _052_ & ~(_076_);
  assign _078_ = _077_ | _075_;
  assign _079_ = _074_ & ~(_078_);
  assign sbox_data_o[0] = _071_ & ~(_079_);
  assign _080_ = ~(_047_ & last_key_i[1]);
  assign _081_ = last_key_i[9] & ~(_041_);
  assign _082_ = _080_ & ~(_081_);
  assign _083_ = last_key_i[17] & ~(_043_);
  assign _084_ = ~(last_key_i[25] & start_i);
  assign _085_ = _052_ & ~(_084_);
  assign _086_ = _085_ | _083_;
  assign _087_ = _082_ & ~(_086_);
  assign sbox_data_o[1] = _071_ & ~(_087_);
  assign _088_ = ~(_047_ & last_key_i[2]);
  assign _089_ = last_key_i[10] & ~(_041_);
  assign _090_ = _088_ & ~(_089_);
  assign _091_ = last_key_i[18] & ~(_043_);
  assign _092_ = ~(last_key_i[26] & start_i);
  assign _093_ = _052_ & ~(_092_);
  assign _094_ = _093_ | _091_;
  assign _095_ = _090_ & ~(_094_);
  assign sbox_data_o[2] = _071_ & ~(_095_);
  assign _096_ = ~(_047_ & last_key_i[3]);
  assign _097_ = last_key_i[11] & ~(_041_);
  assign _098_ = _096_ & ~(_097_);
  assign _099_ = last_key_i[19] & ~(_043_);
  assign _100_ = ~(last_key_i[27] & start_i);
  assign _101_ = _052_ & ~(_100_);
  assign _102_ = _101_ | _099_;
  assign _103_ = _098_ & ~(_102_);
  assign sbox_data_o[3] = _071_ & ~(_103_);
  assign _104_ = ~(_047_ & last_key_i[4]);
  assign _105_ = last_key_i[12] & ~(_041_);
  assign _106_ = _104_ & ~(_105_);
  assign _107_ = last_key_i[20] & ~(_043_);
  assign _108_ = ~(last_key_i[28] & start_i);
  assign _109_ = _052_ & ~(_108_);
  assign _110_ = _109_ | _107_;
  assign _111_ = _106_ & ~(_110_);
  assign sbox_data_o[4] = _071_ & ~(_111_);
  assign _112_ = ~(_047_ & last_key_i[5]);
  assign _113_ = last_key_i[13] & ~(_041_);
  assign _114_ = _112_ & ~(_113_);
  assign _115_ = last_key_i[21] & ~(_043_);
  assign _116_ = ~(last_key_i[29] & start_i);
  assign _117_ = _052_ & ~(_116_);
  assign _118_ = _117_ | _115_;
  assign _119_ = _114_ & ~(_118_);
  assign sbox_data_o[5] = _071_ & ~(_119_);
  assign _120_ = ~(_047_ & last_key_i[6]);
  assign _121_ = last_key_i[14] & ~(_041_);
  assign _122_ = _120_ & ~(_121_);
  assign _123_ = last_key_i[22] & ~(_043_);
  assign _124_ = ~(last_key_i[30] & start_i);
  assign _125_ = _052_ & ~(_124_);
  assign _126_ = _125_ | _123_;
  assign _127_ = _122_ & ~(_126_);
  assign sbox_data_o[6] = _071_ & ~(_127_);
  assign _128_ = ~(_047_ & last_key_i[7]);
  assign _129_ = last_key_i[15] & ~(_041_);
  assign _130_ = _128_ & ~(_129_);
  assign _131_ = last_key_i[23] & ~(_043_);
  assign _132_ = ~(last_key_i[31] & start_i);
  assign _133_ = _052_ & ~(_132_);
  assign _134_ = _133_ | _131_;
  assign _135_ = _130_ & ~(_134_);
  assign sbox_data_o[7] = _071_ & ~(_135_);
  assign _136_ = _069_ | _067_;
  assign _137_ = _052_ & ~(_068_);
  assign _138_ = _137_ | _136_;
  assign _139_ = ~(_136_ | _052_);
  assign sbox_access_o = _138_ & ~(_139_);
  assign _140_ = _041_ & ~(_052_);
  assign next_state[0] = _071_ & ~(_140_);
  assign next_state[1] = ~(_043_ & _041_);
  assign _000_ = _050_ | trojan_ena;
  assign _141_ = ~(last_key_i[120] ^ col[24]);
  assign _142_ = round_i[0] & ~(round_i[1]);
  assign _143_ = round_i[3] & ~(round_i[2]);
  assign _144_ = ~(_143_ & _142_);
  assign _145_ = ~(round_i[2] | round_i[3]);
  assign _146_ = _145_ & _142_;
  assign _147_ = _146_ | ~(_144_);
  assign _148_ = round_i[1] & ~(round_i[0]);
  assign _149_ = ~(_148_ & _143_);
  assign _150_ = _149_ & _144_;
  assign _151_ = ~(round_i[1] | round_i[0]);
  assign _152_ = _151_ & _143_;
  assign _153_ = ~(round_i[1] & round_i[0]);
  assign _154_ = round_i[3] | ~(round_i[2]);
  assign _155_ = ~(_154_ | _153_);
  assign _156_ = _155_ | _152_;
  assign _157_ = _156_ | ~(_150_);
  assign _158_ = _148_ & ~(_154_);
  assign _159_ = _142_ & ~(_154_);
  assign _160_ = _159_ | _158_;
  assign _161_ = _151_ & ~(_154_);
  assign _162_ = _145_ & ~(_153_);
  assign _163_ = _162_ | _161_;
  assign _164_ = _163_ | _160_;
  assign _165_ = _164_ | _157_;
  assign _166_ = _148_ & _145_;
  assign _167_ = _166_ | _146_;
  assign _168_ = _167_ | _165_;
  assign _169_ = _168_ & _147_;
  assign _008_ = ~(_169_ ^ _141_);
  assign _170_ = ~(last_key_i[121] ^ col[25]);
  assign _171_ = _150_ & ~(_166_);
  assign _172_ = _168_ & ~(_171_);
  assign _009_ = ~(_172_ ^ _170_);
  assign _173_ = ~(last_key_i[122] ^ col[26]);
  assign _174_ = _149_ & ~(_162_);
  assign _175_ = _168_ & ~(_174_);
  assign _010_ = ~(_175_ ^ _173_);
  assign _176_ = ~(last_key_i[123] ^ col[27]);
  assign _177_ = _144_ & ~(_161_);
  assign _178_ = _168_ & ~(_177_);
  assign _011_ = ~(_178_ ^ _176_);
  assign _179_ = ~(last_key_i[124] ^ col[28]);
  assign _180_ = _150_ & ~(_159_);
  assign _181_ = _168_ & ~(_180_);
  assign _012_ = ~(_181_ ^ _179_);
  assign _182_ = ~(last_key_i[125] ^ col[29]);
  assign _183_ = _149_ & ~(_158_);
  assign _184_ = _168_ & ~(_183_);
  assign _013_ = ~(_184_ ^ _182_);
  assign _185_ = ~(last_key_i[126] ^ col[30]);
  assign _186_ = _168_ & _155_;
  assign _014_ = ~(_186_ ^ _185_);
  assign _187_ = ~(last_key_i[127] ^ col[31]);
  assign _188_ = _168_ & _152_;
  assign _015_ = ~(_188_ ^ _187_);
  assign _189_ = ~(last_key_i[96] ^ col[0]);
  assign _016_ = ~_189_;
  assign _190_ = ~(last_key_i[97] ^ col[1]);
  assign _027_ = ~_190_;
  assign _191_ = ~(last_key_i[98] ^ col[2]);
  assign _032_ = ~_191_;
  assign _192_ = ~(last_key_i[99] ^ col[3]);
  assign _033_ = ~_192_;
  assign _193_ = ~(last_key_i[100] ^ col[4]);
  assign _034_ = ~_193_;
  assign _194_ = ~(last_key_i[101] ^ col[5]);
  assign _035_ = ~_194_;
  assign _195_ = ~(last_key_i[102] ^ col[6]);
  assign _036_ = ~_195_;
  assign _196_ = ~(last_key_i[103] ^ col[7]);
  assign _037_ = ~_196_;
  assign _197_ = ~(last_key_i[104] ^ sbox_data_i[0]);
  assign _038_ = ~_197_;
  assign _198_ = ~(last_key_i[105] ^ sbox_data_i[1]);
  assign _039_ = ~_198_;
  assign _199_ = ~(last_key_i[106] ^ sbox_data_i[2]);
  assign _017_ = ~_199_;
  assign _200_ = ~(last_key_i[107] ^ sbox_data_i[3]);
  assign _018_ = ~_200_;
  assign _201_ = ~(last_key_i[108] ^ sbox_data_i[4]);
  assign _019_ = ~_201_;
  assign _202_ = ~(last_key_i[109] ^ sbox_data_i[5]);
  assign _020_ = ~_202_;
  assign _203_ = ~(last_key_i[110] ^ sbox_data_i[6]);
  assign _021_ = ~_203_;
  assign _204_ = ~(last_key_i[111] ^ sbox_data_i[7]);
  assign _022_ = ~_204_;
  assign _205_ = ~(last_key_i[112] ^ col[16]);
  assign _023_ = ~_205_;
  assign _206_ = ~(last_key_i[113] ^ col[17]);
  assign _024_ = ~_206_;
  assign _207_ = ~(last_key_i[114] ^ col[18]);
  assign _025_ = ~_207_;
  assign _208_ = ~(last_key_i[115] ^ col[19]);
  assign _026_ = ~_208_;
  assign _209_ = ~(last_key_i[116] ^ col[20]);
  assign _028_ = ~_209_;
  assign _210_ = ~(last_key_i[117] ^ col[21]);
  assign _029_ = ~_210_;
  assign _211_ = ~(last_key_i[118] ^ col[22]);
  assign _030_ = ~_211_;
  assign _212_ = ~(last_key_i[119] ^ col[23]);
  assign _031_ = ~_212_;
  assign _213_ = _189_ ^ last_key_i[64];
  assign _261_ = ~_213_;
  assign _214_ = _190_ ^ last_key_i[65];
  assign _272_ = ~_214_;
  assign _215_ = _191_ ^ last_key_i[66];
  assign _283_ = ~_215_;
  assign _216_ = _192_ ^ last_key_i[67];
  assign _286_ = ~_216_;
  assign _217_ = _193_ ^ last_key_i[68];
  assign _287_ = ~_217_;
  assign _218_ = _194_ ^ last_key_i[69];
  assign _288_ = ~_218_;
  assign _219_ = _195_ ^ last_key_i[70];
  assign _289_ = ~_219_;
  assign _220_ = _196_ ^ last_key_i[71];
  assign _290_ = ~_220_;
  assign _221_ = _197_ ^ last_key_i[72];
  assign _291_ = ~_221_;
  assign _222_ = _198_ ^ last_key_i[73];
  assign _292_ = ~_222_;
  assign _223_ = _199_ ^ last_key_i[74];
  assign _262_ = ~_223_;
  assign _224_ = _200_ ^ last_key_i[75];
  assign _263_ = ~_224_;
  assign _225_ = _201_ ^ last_key_i[76];
  assign _264_ = ~_225_;
  assign _226_ = _202_ ^ last_key_i[77];
  assign _265_ = ~_226_;
  assign _227_ = _203_ ^ last_key_i[78];
  assign _266_ = ~_227_;
  assign _228_ = _204_ ^ last_key_i[79];
  assign _267_ = ~_228_;
  assign _229_ = _205_ ^ last_key_i[80];
  assign _268_ = ~_229_;
  assign _230_ = _206_ ^ last_key_i[81];
  assign _269_ = ~_230_;
  assign _231_ = _207_ ^ last_key_i[82];
  assign _270_ = ~_231_;
  assign _232_ = _208_ ^ last_key_i[83];
  assign _271_ = ~_232_;
  assign _233_ = _209_ ^ last_key_i[84];
  assign _273_ = ~_233_;
  assign _234_ = _210_ ^ last_key_i[85];
  assign _274_ = ~_234_;
  assign _235_ = _211_ ^ last_key_i[86];
  assign _275_ = ~_235_;
  assign _236_ = _212_ ^ last_key_i[87];
  assign _276_ = ~_236_;
  assign _277_ = _008_ ^ last_key_i[88];
  assign _278_ = _009_ ^ last_key_i[89];
  assign _279_ = _010_ ^ last_key_i[90];
  assign _280_ = _011_ ^ last_key_i[91];
  assign _281_ = _012_ ^ last_key_i[92];
  assign _282_ = _013_ ^ last_key_i[93];
  assign _284_ = _014_ ^ last_key_i[94];
  assign _285_ = _015_ ^ last_key_i[95];
  assign _237_ = _213_ ^ last_key_i[32];
  assign _293_ = ~_237_;
  assign _238_ = _214_ ^ last_key_i[33];
  assign _304_ = ~_238_;
  assign _239_ = _215_ ^ last_key_i[34];
  assign _315_ = ~_239_;
  assign _240_ = _216_ ^ last_key_i[35];
  assign _318_ = ~_240_;
  assign _241_ = _217_ ^ last_key_i[36];
  assign _319_ = ~_241_;
  assign _242_ = _218_ ^ last_key_i[37];
  assign _320_ = ~_242_;
  assign _243_ = _219_ ^ last_key_i[38];
  assign _321_ = ~_243_;
  assign _244_ = _220_ ^ last_key_i[39];
  assign _322_ = ~_244_;
  assign _245_ = _221_ ^ last_key_i[40];
  assign _323_ = ~_245_;
  assign _246_ = _222_ ^ last_key_i[41];
  assign _324_ = ~_246_;
  assign _247_ = _223_ ^ last_key_i[42];
  assign _294_ = ~_247_;
  assign _248_ = _224_ ^ last_key_i[43];
  assign _295_ = ~_248_;
  assign _249_ = _225_ ^ last_key_i[44];
  assign _296_ = ~_249_;
  assign _250_ = _226_ ^ last_key_i[45];
  assign _297_ = ~_250_;
  assign _251_ = _227_ ^ last_key_i[46];
  assign _298_ = ~_251_;
  assign _252_ = _228_ ^ last_key_i[47];
  assign _299_ = ~_252_;
  assign _253_ = _229_ ^ last_key_i[48];
  assign _300_ = ~_253_;
  assign _254_ = _230_ ^ last_key_i[49];
  assign _301_ = ~_254_;
  assign _255_ = _231_ ^ last_key_i[50];
  assign _302_ = ~_255_;
  assign _256_ = _232_ ^ last_key_i[51];
  assign _303_ = ~_256_;
  assign _257_ = _233_ ^ last_key_i[52];
  assign _305_ = ~_257_;
  assign _258_ = _234_ ^ last_key_i[53];
  assign _306_ = ~_258_;
  assign _259_ = _235_ ^ last_key_i[54];
  assign _307_ = ~_259_;
  assign _260_ = _236_ ^ last_key_i[55];
  assign _308_ = ~_260_;
  assign _309_ = _277_ ^ last_key_i[56];
  assign _310_ = _278_ ^ last_key_i[57];
  assign _311_ = _279_ ^ last_key_i[58];
  assign _312_ = _280_ ^ last_key_i[59];
  assign _313_ = _281_ ^ last_key_i[60];
  assign _314_ = _282_ ^ last_key_i[61];
  assign _316_ = _284_ ^ last_key_i[62];
  assign _317_ = _285_ ^ last_key_i[63];
  assign _325_ = ~(_237_ ^ last_key_i[0]);
  assign _336_ = ~(_238_ ^ last_key_i[1]);
  assign _347_ = ~(_239_ ^ last_key_i[2]);
  assign _350_ = ~(_240_ ^ last_key_i[3]);
  assign _351_ = ~(_241_ ^ last_key_i[4]);
  assign _352_ = ~(_242_ ^ last_key_i[5]);
  assign _353_ = ~(_243_ ^ last_key_i[6]);
  assign _354_ = ~(_244_ ^ last_key_i[7]);
  assign _355_ = ~(_245_ ^ last_key_i[8]);
  assign _356_ = ~(_246_ ^ last_key_i[9]);
  assign _326_ = ~(_247_ ^ last_key_i[10]);
  assign _327_ = ~(_248_ ^ last_key_i[11]);
  assign _328_ = ~(_249_ ^ last_key_i[12]);
  assign _329_ = ~(_250_ ^ last_key_i[13]);
  assign _330_ = ~(_251_ ^ last_key_i[14]);
  assign _331_ = ~(_252_ ^ last_key_i[15]);
  assign _332_ = ~(_253_ ^ last_key_i[16]);
  assign _333_ = ~(_254_ ^ last_key_i[17]);
  assign _334_ = ~(_255_ ^ last_key_i[18]);
  assign _335_ = ~(_256_ ^ last_key_i[19]);
  assign _337_ = ~(_257_ ^ last_key_i[20]);
  assign _338_ = ~(_258_ ^ last_key_i[21]);
  assign _339_ = ~(_259_ ^ last_key_i[22]);
  assign _340_ = ~(_260_ ^ last_key_i[23]);
  assign _341_ = _309_ ^ last_key_i[24];
  assign _342_ = _310_ ^ last_key_i[25];
  assign _343_ = _311_ ^ last_key_i[26];
  assign _344_ = _312_ ^ last_key_i[27];
  assign _345_ = _313_ ^ last_key_i[28];
  assign _346_ = _314_ ^ last_key_i[29];
  assign _348_ = _316_ ^ last_key_i[30];
  assign _349_ = _317_ ^ last_key_i[31];
  assign _001_ = _063_ & trojan_state[0];
  always @(posedge clk, negedge reset)
    if (!reset) trojan_state[0] <= 1'h1;
    else trojan_state[0] <= _001_;
  always @(posedge clk, negedge reset)
    if (!reset) trojan_state[1] <= 1'h0;
    else trojan_state[1] <= _002_;
  always @(posedge clk, negedge reset)
    if (!reset) trojan_state[2] <= 1'h0;
    else trojan_state[2] <= _003_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) ready_o <= 1'h0;
    else ready_o <= _000_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[0] <= 1'h0;
    else if (_050_) key_reg[0] <= _325_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[1] <= 1'h0;
    else if (_050_) key_reg[1] <= _336_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[2] <= 1'h0;
    else if (_050_) key_reg[2] <= _347_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[3] <= 1'h0;
    else if (_050_) key_reg[3] <= _350_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[4] <= 1'h0;
    else if (_050_) key_reg[4] <= _351_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[5] <= 1'h0;
    else if (_050_) key_reg[5] <= _352_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[6] <= 1'h0;
    else if (_050_) key_reg[6] <= _353_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[7] <= 1'h0;
    else if (_050_) key_reg[7] <= _354_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[8] <= 1'h0;
    else if (_050_) key_reg[8] <= _355_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[9] <= 1'h0;
    else if (_050_) key_reg[9] <= _356_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[10] <= 1'h0;
    else if (_050_) key_reg[10] <= _326_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[11] <= 1'h0;
    else if (_050_) key_reg[11] <= _327_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[12] <= 1'h0;
    else if (_050_) key_reg[12] <= _328_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[13] <= 1'h0;
    else if (_050_) key_reg[13] <= _329_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[14] <= 1'h0;
    else if (_050_) key_reg[14] <= _330_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[15] <= 1'h0;
    else if (_050_) key_reg[15] <= _331_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[16] <= 1'h0;
    else if (_050_) key_reg[16] <= _332_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[17] <= 1'h0;
    else if (_050_) key_reg[17] <= _333_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[18] <= 1'h0;
    else if (_050_) key_reg[18] <= _334_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[19] <= 1'h0;
    else if (_050_) key_reg[19] <= _335_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[20] <= 1'h0;
    else if (_050_) key_reg[20] <= _337_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[21] <= 1'h0;
    else if (_050_) key_reg[21] <= _338_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[22] <= 1'h0;
    else if (_050_) key_reg[22] <= _339_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[23] <= 1'h0;
    else if (_050_) key_reg[23] <= _340_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[24] <= 1'h0;
    else if (_050_) key_reg[24] <= _341_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[25] <= 1'h0;
    else if (_050_) key_reg[25] <= _342_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[26] <= 1'h0;
    else if (_050_) key_reg[26] <= _343_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[27] <= 1'h0;
    else if (_050_) key_reg[27] <= _344_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[28] <= 1'h0;
    else if (_050_) key_reg[28] <= _345_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[29] <= 1'h0;
    else if (_050_) key_reg[29] <= _346_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[30] <= 1'h0;
    else if (_050_) key_reg[30] <= _348_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[31] <= 1'h0;
    else if (_050_) key_reg[31] <= _349_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[32] <= 1'h0;
    else if (_050_) key_reg[32] <= _293_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[33] <= 1'h0;
    else if (_050_) key_reg[33] <= _304_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[34] <= 1'h0;
    else if (_050_) key_reg[34] <= _315_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[35] <= 1'h0;
    else if (_050_) key_reg[35] <= _318_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[36] <= 1'h0;
    else if (_050_) key_reg[36] <= _319_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[37] <= 1'h0;
    else if (_050_) key_reg[37] <= _320_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[38] <= 1'h0;
    else if (_050_) key_reg[38] <= _321_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[39] <= 1'h0;
    else if (_050_) key_reg[39] <= _322_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[40] <= 1'h0;
    else if (_050_) key_reg[40] <= _323_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[41] <= 1'h0;
    else if (_050_) key_reg[41] <= _324_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[42] <= 1'h0;
    else if (_050_) key_reg[42] <= _294_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[43] <= 1'h0;
    else if (_050_) key_reg[43] <= _295_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[44] <= 1'h0;
    else if (_050_) key_reg[44] <= _296_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[45] <= 1'h0;
    else if (_050_) key_reg[45] <= _297_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[46] <= 1'h0;
    else if (_050_) key_reg[46] <= _298_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[47] <= 1'h0;
    else if (_050_) key_reg[47] <= _299_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[48] <= 1'h0;
    else if (_050_) key_reg[48] <= _300_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[49] <= 1'h0;
    else if (_050_) key_reg[49] <= _301_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[50] <= 1'h0;
    else if (_050_) key_reg[50] <= _302_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[51] <= 1'h0;
    else if (_050_) key_reg[51] <= _303_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[52] <= 1'h0;
    else if (_050_) key_reg[52] <= _305_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[53] <= 1'h0;
    else if (_050_) key_reg[53] <= _306_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[54] <= 1'h0;
    else if (_050_) key_reg[54] <= _307_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[55] <= 1'h0;
    else if (_050_) key_reg[55] <= _308_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[56] <= 1'h0;
    else if (_050_) key_reg[56] <= _309_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[57] <= 1'h0;
    else if (_050_) key_reg[57] <= _310_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[58] <= 1'h0;
    else if (_050_) key_reg[58] <= _311_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[59] <= 1'h0;
    else if (_050_) key_reg[59] <= _312_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[60] <= 1'h0;
    else if (_050_) key_reg[60] <= _313_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[61] <= 1'h0;
    else if (_050_) key_reg[61] <= _314_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[62] <= 1'h0;
    else if (_050_) key_reg[62] <= _316_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[63] <= 1'h0;
    else if (_050_) key_reg[63] <= _317_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[64] <= 1'h0;
    else if (_050_) key_reg[64] <= _261_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[65] <= 1'h0;
    else if (_050_) key_reg[65] <= _272_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[66] <= 1'h0;
    else if (_050_) key_reg[66] <= _283_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[67] <= 1'h0;
    else if (_050_) key_reg[67] <= _286_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[68] <= 1'h0;
    else if (_050_) key_reg[68] <= _287_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[69] <= 1'h0;
    else if (_050_) key_reg[69] <= _288_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[70] <= 1'h0;
    else if (_050_) key_reg[70] <= _289_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[71] <= 1'h0;
    else if (_050_) key_reg[71] <= _290_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[72] <= 1'h0;
    else if (_050_) key_reg[72] <= _291_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[73] <= 1'h0;
    else if (_050_) key_reg[73] <= _292_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[74] <= 1'h0;
    else if (_050_) key_reg[74] <= _262_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[75] <= 1'h0;
    else if (_050_) key_reg[75] <= _263_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[76] <= 1'h0;
    else if (_050_) key_reg[76] <= _264_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[77] <= 1'h0;
    else if (_050_) key_reg[77] <= _265_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[78] <= 1'h0;
    else if (_050_) key_reg[78] <= _266_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[79] <= 1'h0;
    else if (_050_) key_reg[79] <= _267_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[80] <= 1'h0;
    else if (_050_) key_reg[80] <= _268_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[81] <= 1'h0;
    else if (_050_) key_reg[81] <= _269_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[82] <= 1'h0;
    else if (_050_) key_reg[82] <= _270_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[83] <= 1'h0;
    else if (_050_) key_reg[83] <= _271_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[84] <= 1'h0;
    else if (_050_) key_reg[84] <= _273_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[85] <= 1'h0;
    else if (_050_) key_reg[85] <= _274_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[86] <= 1'h0;
    else if (_050_) key_reg[86] <= _275_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[87] <= 1'h0;
    else if (_050_) key_reg[87] <= _276_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[88] <= 1'h0;
    else if (_050_) key_reg[88] <= _277_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[89] <= 1'h0;
    else if (_050_) key_reg[89] <= _278_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[90] <= 1'h0;
    else if (_050_) key_reg[90] <= _279_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[91] <= 1'h0;
    else if (_050_) key_reg[91] <= _280_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[92] <= 1'h0;
    else if (_050_) key_reg[92] <= _281_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[93] <= 1'h0;
    else if (_050_) key_reg[93] <= _282_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[94] <= 1'h0;
    else if (_050_) key_reg[94] <= _284_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[95] <= 1'h0;
    else if (_050_) key_reg[95] <= _285_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[96] <= 1'h0;
    else if (_050_) key_reg[96] <= _016_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[97] <= 1'h0;
    else if (_050_) key_reg[97] <= _027_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[98] <= 1'h0;
    else if (_050_) key_reg[98] <= _032_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[99] <= 1'h0;
    else if (_050_) key_reg[99] <= _033_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[100] <= 1'h0;
    else if (_050_) key_reg[100] <= _034_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[101] <= 1'h0;
    else if (_050_) key_reg[101] <= _035_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[102] <= 1'h0;
    else if (_050_) key_reg[102] <= _036_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[103] <= 1'h0;
    else if (_050_) key_reg[103] <= _037_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[104] <= 1'h0;
    else if (_050_) key_reg[104] <= _038_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[105] <= 1'h0;
    else if (_050_) key_reg[105] <= _039_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[106] <= 1'h0;
    else if (_050_) key_reg[106] <= _017_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[107] <= 1'h0;
    else if (_050_) key_reg[107] <= _018_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[108] <= 1'h0;
    else if (_050_) key_reg[108] <= _019_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[109] <= 1'h0;
    else if (_050_) key_reg[109] <= _020_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[110] <= 1'h0;
    else if (_050_) key_reg[110] <= _021_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[111] <= 1'h0;
    else if (_050_) key_reg[111] <= _022_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[112] <= 1'h0;
    else if (_050_) key_reg[112] <= _023_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[113] <= 1'h0;
    else if (_050_) key_reg[113] <= _024_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[114] <= 1'h0;
    else if (_050_) key_reg[114] <= _025_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[115] <= 1'h0;
    else if (_050_) key_reg[115] <= _026_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[116] <= 1'h0;
    else if (_050_) key_reg[116] <= _028_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[117] <= 1'h0;
    else if (_050_) key_reg[117] <= _029_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[118] <= 1'h0;
    else if (_050_) key_reg[118] <= _030_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[119] <= 1'h0;
    else if (_050_) key_reg[119] <= _031_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[120] <= 1'h0;
    else if (_050_) key_reg[120] <= _008_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[121] <= 1'h0;
    else if (_050_) key_reg[121] <= _009_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[122] <= 1'h0;
    else if (_050_) key_reg[122] <= _010_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[123] <= 1'h0;
    else if (_050_) key_reg[123] <= _011_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[124] <= 1'h0;
    else if (_050_) key_reg[124] <= _012_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[125] <= 1'h0;
    else if (_050_) key_reg[125] <= _013_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[126] <= 1'h0;
    else if (_050_) key_reg[126] <= _014_;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) key_reg[127] <= 1'h0;
    else if (_050_) key_reg[127] <= _015_;
  reg \col_reg[24] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[24]  <= 1'h0;
    else if (_006_) \col_reg[24]  <= sbox_data_i[0];
  assign col[24] = \col_reg[24] ;
  reg \col_reg[25] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[25]  <= 1'h0;
    else if (_006_) \col_reg[25]  <= sbox_data_i[1];
  assign col[25] = \col_reg[25] ;
  reg \col_reg[26] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[26]  <= 1'h0;
    else if (_006_) \col_reg[26]  <= sbox_data_i[2];
  assign col[26] = \col_reg[26] ;
  reg \col_reg[27] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[27]  <= 1'h0;
    else if (_006_) \col_reg[27]  <= sbox_data_i[3];
  assign col[27] = \col_reg[27] ;
  reg \col_reg[28] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[28]  <= 1'h0;
    else if (_006_) \col_reg[28]  <= sbox_data_i[4];
  assign col[28] = \col_reg[28] ;
  reg \col_reg[29] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[29]  <= 1'h0;
    else if (_006_) \col_reg[29]  <= sbox_data_i[5];
  assign col[29] = \col_reg[29] ;
  reg \col_reg[30] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[30]  <= 1'h0;
    else if (_006_) \col_reg[30]  <= sbox_data_i[6];
  assign col[30] = \col_reg[30] ;
  reg \col_reg[31] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[31]  <= 1'h0;
    else if (_006_) \col_reg[31]  <= sbox_data_i[7];
  assign col[31] = \col_reg[31] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) state[0] <= 1'h0;
    else if (_004_) state[0] <= next_state[0];
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) state[1] <= 1'h0;
    else if (_004_) state[1] <= next_state[1];
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) state[2] <= 1'h0;
    else if (_004_) state[2] <= next_state[2];
  reg \col_reg[16] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[16]  <= 1'h0;
    else if (_005_) \col_reg[16]  <= sbox_data_i[0];
  assign col[16] = \col_reg[16] ;
  reg \col_reg[17] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[17]  <= 1'h0;
    else if (_005_) \col_reg[17]  <= sbox_data_i[1];
  assign col[17] = \col_reg[17] ;
  reg \col_reg[18] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[18]  <= 1'h0;
    else if (_005_) \col_reg[18]  <= sbox_data_i[2];
  assign col[18] = \col_reg[18] ;
  reg \col_reg[19] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[19]  <= 1'h0;
    else if (_005_) \col_reg[19]  <= sbox_data_i[3];
  assign col[19] = \col_reg[19] ;
  reg \col_reg[20] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[20]  <= 1'h0;
    else if (_005_) \col_reg[20]  <= sbox_data_i[4];
  assign col[20] = \col_reg[20] ;
  reg \col_reg[21] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[21]  <= 1'h0;
    else if (_005_) \col_reg[21]  <= sbox_data_i[5];
  assign col[21] = \col_reg[21] ;
  reg \col_reg[22] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[22]  <= 1'h0;
    else if (_005_) \col_reg[22]  <= sbox_data_i[6];
  assign col[22] = \col_reg[22] ;
  reg \col_reg[23] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[23]  <= 1'h0;
    else if (_005_) \col_reg[23]  <= sbox_data_i[7];
  assign col[23] = \col_reg[23] ;
  reg \col_reg[0] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[0]  <= 1'h0;
    else if (_007_) \col_reg[0]  <= sbox_data_i[0];
  assign col[0] = \col_reg[0] ;
  reg \col_reg[1] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[1]  <= 1'h0;
    else if (_007_) \col_reg[1]  <= sbox_data_i[1];
  assign col[1] = \col_reg[1] ;
  reg \col_reg[2] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[2]  <= 1'h0;
    else if (_007_) \col_reg[2]  <= sbox_data_i[2];
  assign col[2] = \col_reg[2] ;
  reg \col_reg[3] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[3]  <= 1'h0;
    else if (_007_) \col_reg[3]  <= sbox_data_i[3];
  assign col[3] = \col_reg[3] ;
  reg \col_reg[4] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[4]  <= 1'h0;
    else if (_007_) \col_reg[4]  <= sbox_data_i[4];
  assign col[4] = \col_reg[4] ;
  reg \col_reg[5] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[5]  <= 1'h0;
    else if (_007_) \col_reg[5]  <= sbox_data_i[5];
  assign col[5] = \col_reg[5] ;
  reg \col_reg[6] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[6]  <= 1'h0;
    else if (_007_) \col_reg[6]  <= sbox_data_i[6];
  assign col[6] = \col_reg[6] ;
  reg \col_reg[7] ;
  (* src = "keysched.v:95.1-117.4" *)
  always @(posedge clk, negedge reset)
    if (!reset) \col_reg[7]  <= 1'h0;
    else if (_007_) \col_reg[7]  <= sbox_data_i[7];
  assign col[7] = \col_reg[7] ;
  (* src = "keysched.v:119.1-121.59" *)
  always @(posedge clk, negedge reset)
    if (!reset) trojan_ena <= 1'h0;
    else if (trojan_state[1]) trojan_ena <= 1'h1;
  assign K_var = last_key_i;
  assign col[15:8] = 8'hxx;
  assign new_key_o = key_reg;
  assign next_col = { sbox_data_i, sbox_data_i, 8'hxx, sbox_data_i };
  assign sbox_decrypt_o = 1'h0;
  assign zero = 24'h000000;
endmodule
